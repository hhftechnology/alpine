name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

#dd permissions block
permissions:
  contents: read
  packages: write
  security-events: write
  actions: write

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  DOCKER_REGISTRY_REPO: ${{ secrets.DOCKER_REGISTRY_REPO }}
  DOCKER_REGISTRY_DOCKERHUB_REPO: ${{ secrets.DOCKER_REGISTRY_DOCKERHUB_REPO }}
  DOCKER_REGISTRY_QUAY_REPO: ${{ secrets.DOCKER_REGISTRY_QUAY_REPO }}
  DOCKER_REGISTRY_QUAY: ${{ secrets.DOCKER_REGISTRY_QUAY }}

jobs:
  # Security scanning jobs
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
          
      - name: Run secret detection
        uses: zricethezav/gitleaks-action@v2

  # AMD64 build jobs
  build-amd64:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push AMD64 images
        uses: docker/build-push-action@v5
        with:
          context: ./alpine-3.20.3/amd64/
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:x86_64
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:amd64
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:x86_64
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:amd64
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:x86_64
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:amd64
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

  # ARM32v7 build jobs
  build-arm32v7:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to registries
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM32v7 images
        uses: docker/build-push-action@v5
        with:
          context: ./alpine-3.20.3/arm32v7/
          platforms: linux/arm/v7
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:arm32v7
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:armhf
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:arm32v7
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:armhf
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:arm32v7
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:armhf
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

  # ARM64v8 build jobs
  build-arm64v8:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to registries
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64v8 images
        uses: docker/build-push-action@v5
        with:
          context: ./alpine-3.20.3/arm64v8/
          platforms: linux/arm64/v8
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:arm64v8
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:aarch64
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:arm64v8
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:aarch64
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:arm64v8
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:aarch64
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

  # Create and push multi-arch manifests
  create-manifests:
    needs: [build-amd64, build-arm32v7, build-arm64v8]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registries
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifests
        run: |
          docker buildx imagetools create -t ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:latest \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:amd64 \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:arm32v7 \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REGISTRY_REPO }}:arm64v8

          docker buildx imagetools create -t ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:latest \
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:amd64 \
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:arm32v7 \
            ${{ env.DOCKER_REGISTRY_DOCKERHUB_REPO }}:arm64v8

          docker buildx imagetools create -t ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:latest \
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:amd64 \
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:arm32v7 \
            ${{ env.DOCKER_REGISTRY_QUAY }}/${{ env.DOCKER_REGISTRY_QUAY_REPO }}:arm64v8